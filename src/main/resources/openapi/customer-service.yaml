openapi: 3.0.3
info:
  title: Customer Service API
  version: 1.0.0
  description: >
    Simplified REST API for managing customers in the banking system.
    Optimized for exam presentation: only essential endpoints.
servers:
  - url: http://localhost:8080/api/v1
    description: Local development

tags:
  - name: Customers
    description: Customer management endpoints

paths:
  /customers:
    post:
      tags: [Customers]
      summary: Create a new customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerRequestDTO'
      responses:
        '201':
          description: Customer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerDTO'
              example:
                id: "cst-123"
                customerType: PERSONAL
                documentType: DNI
                documentNumber: "12345678"
                firstName: "Carlos"
                lastName: "Ramírez"
                numberPhone: "998564158"
                status: ACTIVE
        '400': { description: Invalid input }
        '409': { description: Duplicate document }

    get:
      tags: [Customers]
      summary: List all customers
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum: [PERSONAL, BUSINESS]
      responses:
        '200':
          description: List of customers
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/CustomerDTO' }
              example:
                - id: "cst-123"
                  customerType: PERSONAL
                  firstName: "Carlos"
                  lastName: "Ramírez"
                  documentType: DNI
                  documentNumber: "12345678"
                  status: ACTIVE
                  numberPhone: "998564158"
                - id: "cst-124"
                  customerType: BUSINESS
                  businessName: "Inversiones SAC"
                  documentType: RUC
                  documentNumber: "20123456789"
                  numberPhone: "998564158"
                  status: ACTIVE

  /customers/{customerId}:
    get:
      tags: [Customers]
      summary: Get customer by ID
      parameters:
        - name: customerId
          in: path
          required: true
          schema: { type: string }
      responses:
        '200':
          description: Customer details
          content:
            application/json:
              schema: { $ref: '#/components/schemas/CustomerDTO' }
              example:
                id: "cst-123"
                customerType: PERSONAL
                documentType: DNI
                documentNumber: "12345678"
                firstName: "Carlos"
                lastName: "Ramírez"
                numberPhone: "998564158"
                status: ACTIVE
        '404': { description: Customer not found }

  /customers/documentNumber/{documentNumber}:
    get:
      tags: [ Customers ]
      summary: Get customer by documentNumber
      parameters:
        - name: documentNumber
          in: path
          required: true
          schema: { type: string }
      responses:
        '200':
          description: Customer details
          content:
            application/json:
              schema: { $ref: '#/components/schemas/CustomerDTO' }
              example:
                id: "cst-123"
                customerType: PERSONAL
                documentType: DNI
                documentNumber: "12345678"
                firstName: "Carlos"
                lastName: "Ramírez"
                numberPhone: "998564158"
                status: ACTIVE
        '404': { description: Customer not found }

  /customers/numberPhone/{numberPhone}:
    get:
      tags: [ Customers ]
      summary: Get customer by numberPhone
      parameters:
        - name: numberPhone
          in: path
          required: true
          schema: { type: string }
      responses:
        '200':
          description: Customer details
          content:
            application/json:
              schema: { $ref: '#/components/schemas/CustomerDTO' }
              example:
                id: "cst-123"
                customerType: PERSONAL
                documentType: DNI
                documentNumber: "12345678"
                firstName: "Carlos"
                lastName: "Ramírez"
                numberPhone: "998564158"
                status: ACTIVE
        '404': { description: Customer not found }

components:
  schemas:
    CustomerRequestDTO:
      type: object
      properties:
        customerType: { type: string, enum: [PERSONAL, BUSINESS,VIP ,PYME] }
        documentType: { type: string, enum: [RUC, DNI]}
        documentNumber: { type: string }
        firstName: { type: string }
        lastName: { type: string }
        businessName: { type: string }
        numberPhone: { type: string }
      required: [customerType, documentType, documentNumber, numberPhone]

    CustomerDTO:
      type: object
      properties:
        id: { type: string }
        customerType: { type: string }
        documentType: { type: string }
        documentNumber: { type: string }
        firstName: { type: string }
        lastName: { type: string }
        businessName: { type: string }
        numberPhone: { type: string }
        status: { type: string, enum: [ACTIVE, INACTIVE] }
